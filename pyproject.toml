[project]
name = "iceye-audit-log"
description = "Audit logging library for Python"
dynamic = ["version"]
requires-python = ">=3.11"
readme = "README.md"
dependencies = []
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
]

[project.urls]
repository = "https://github.com/iceye-ltd/python-audit-log"

[build-system]
requires = ["setuptools>=60", "setuptools-scm>=8.0"]

[tool.setuptools_scm]
# can be empty if no extra settings are needed, presence enables setuptools_scm

[tool.ruff.lint]
select = [
    "A",     # builtins
    "ASYNC", # Helps avoid blocking calls in async code
    "B",     # bugbear
    "C4",    # Comprehensions
    "DTZ",   # datetime checks, sanity check on top of our own
    "E",     # Errors
    "ERA",   # Eradicate (commented out code)
    "F",     # pyflakes
    "FLY",   # flynt (enforce f-strings)
    "G",     # logging format
    "I",     # isort
    "N",     # pep8-naming
    "PERF",  # Perflint
    "PGH",   # pygrep-hooks
    "PIE",   # misc lints
    "PT",    # pytest linting
    "PTH",   # Use pathlib
    "RET",   # Return
    "RUF",   # Ruff-specific rules
    "S",     # Bandit security
    "SIM",   # Simplify
    "TRY",   # exceptions handling
    "UP",    # pyupgrade
]

ignore = [
    "E501",   # Ignore line length errors, Black will handle formatting and long comments/strings are ok
    "G004",   # We prefer f-strings since we don't have slowdowns because of that
    "TRY003", # Too strict about messages
    "TRY301", # Doesn't work well with validators
]

unfixable = [
    "ERA", # Manual removal of those blocks to avoid false positives getting deleted
]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["hash", "help", "id", "list", "type"]

[tool.ruff.lint.per-file-ignores]
"**/tests/**.py" = ["S"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
